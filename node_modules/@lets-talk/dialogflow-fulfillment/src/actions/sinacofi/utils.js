const dialogflow_service = require("./../../services/dialogflow");
const context_helpers = require("./../../helpers/contexts");

async function setQuestionContexts(params, questions) {
    for (var question of questions) {
        question["lifespan"] = 20;
        await dialogflow_service.setContext(params, question)
    }
};

async function setChallengeIdContext(params, challengeId) {
    const context = {
        name: "challengeId",
        lifespan: 20,
        parameters: {
            "challengeId": challengeId,
        }
    };
    await dialogflow_service.setContext(params, context);
};

async function setNewAnswerContext(params, na) {
    const curQuestion = context_helpers.getContextsIncludingString(params, `/question${na}`)[0];
    const curAnswer = params.extra["selected_answer"];
    const newAnswerContext = {
        name: `answer${na}`,
        lifespan: 20,
        parameters: {
            codeQuestion: curQuestion.parameters["codeQuestion"],
            codeAnswer: curQuestion.parameters[`codeAnswer${curAnswer}`],
        }
    };
    await dialogflow_service.setContext(params, newAnswerContext);
    return newAnswerContext
}

exports.setQuestionContexts = setQuestionContexts;
exports.setChallengeIdContext = setChallengeIdContext;
exports.setNewAnswerContext = setNewAnswerContext;