const yup = require('yup');

function validateSettings(configuration) {
    const validateDinamicActionsObject = yup.lazy(obj =>
      yup.object(
        Object.entries(obj).reduce(
          (a, [key]) => ({
            ...a,
            [key]: yup.object()
              .shape({
                method: yup.string().required(),
                params: yup.object().required(),
              })
              .required()
          }),
          {}
        )
      )
    );

    let schema = yup.object().shape({
      organization: yup.string().required(),
      project: yup.string().required(),
      token: yup.string().required(),
      environment: yup.mixed().oneOf(['development', 'staging', 'production']),
      availability: yup.object().shape({
        opening_times: yup.object().shape({
          mon: yup.array().of(yup.string().min(0).max(5)),
          tue: yup.array().of(yup.string().min(0).max(5)),
          wed: yup.array().of(yup.string().min(0).max(5)),
          thu: yup.array().of(yup.string().min(0).max(5)),
          fri: yup.array().of(yup.string().min(0).max(5)),
          sat: yup.array().of(yup.string().min(0).max(5)),
          sun: yup.array().of(yup.string().min(0).max(5)),
        }),
        timezone: yup.string().required(),
        holidays: yup.array().of(yup.string()),
      }).required(),
      actions: validateDinamicActionsObject,
    });

    // check validity
    return schema.validateSync(configuration);
  }

  exports.validateSettings = validateSettings;