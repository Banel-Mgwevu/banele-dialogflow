const auth = require("./google_auth");
const helper = require("./helper");


async function setContext(params, context) {
    const client = auth.getJWTClient(params);
    const contextProcessed = processContext(params, context);
    const url = setContextUrl(params);
    const request = {
      url: url,
      method: "POST",
      data: contextProcessed,
    };
    await helper.callDFAPI(client, request);
};


async function doesContextExist(params, context) {
  try {
    const response = await getContext(params, context);
    return response.status === 200;
  } catch (error) {
    return false
  }
}


async function getContext(params, context) {
  const client = auth.getJWTClient(params);
  const url = getContextUrl(params, context);
  const request = {
    url: url,
    method: "GET",
  };
  return await helper.callDFAPI(client, request);
};


async function deleteAllContexts(params) {
  const client = auth.getJWTClient(params);
  const url = deleteAllContextsUrl(params);
  const request = {
    url: url,
    method: "DELETE",
  };
  await helper.callDFAPI(client, request);
};

async function triggerEvent(params, event) {
  const client = auth.getJWTClient(params);
  const url = triggerEventUrl(params);
  const request = {
    url: url,
    method: "POST",
    data: {
      queryInput: {
        event: {
          name: event,
          languageCode: 'es'
        },
      },
    },
  };
  await helper.callDFAPI(client, request);
};


function processContext(params, context) {
  return {
    name: `projects/${params.project}/agent/sessions/${params.sessionId}/contexts/${context.name}`,
    lifespanCount: context.lifespan,
    parameters: context.parameters,
  };
};

function setContextUrl(params) {
  return `https://dialogflow.googleapis.com/v2/projects/${params.project}/agent/environments/draft/users/-/sessions/${params.sessionId}/contexts`;
};

function getContextUrl(params, context) {
  return `https://dialogflow.googleapis.com/v2/projects/${params.project}/agent/sessions/${params.sessionId}/contexts/${context}`;
};

function deleteAllContextsUrl(params) {
  return `https://dialogflow.googleapis.com/v2/projects/${params.project}/agent/sessions/${params.sessionId}/contexts`;
}

function triggerEventUrl(params) {
    return `https://dialogflow.googleapis.com/v2/projects/${params.project}/agent/sessions/${params.sessionId}:detectIntent`;
}


exports.setContext = setContext;
exports.getContext = getContext;
exports.doesContextExist = doesContextExist;
exports.deleteAllContexts = deleteAllContexts;
exports.triggerEvent = triggerEvent;