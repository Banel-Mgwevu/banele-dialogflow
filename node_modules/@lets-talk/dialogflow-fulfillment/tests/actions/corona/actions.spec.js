const actions = require("../../../src/actions/corona/actions");

const { AdaptorexService } = require("../../../src/services/adaptorex_service");
const df_service = require("../../../src/services/dialogflow");

const mAddMessage = jest.fn();

AdaptorexService.addMessage = mAddMessage;


describe("evaluate corona action", () => {
    beforeEach(() => {
        mAddMessage.mockClear();
    })
    describe("all case", () => {
        describe("no sintoms", () => {
            const params = {
                coronaTestResponses: {
                    0: "response0",
                    1: "response1",
                },
                extra: {
                    response_contacto: 0,
                    response_respiratoria: 0,
                    response_sintomas: 0,
                    response_fiebre: 0,
                    response_condiciones: 0
                },
                provider: "twilio"
            }
            it("sends message to adaptorex", async () => {
                expect.assertions(1);
                await actions.evaluateCorona(params);
                expect(mAddMessage).toHaveBeenCalledWith(params, "response0");
            });
        });
        describe("some sintoms", () => {
            const params = {
                coronaTestResponses: {
                    0: "response0",
                    1: "response1",
                },
                extra: {
                    response_contacto: 1,
                    response_respiratoria: 0,
                    response_sintomas: 1,
                    response_fiebre: 0,
                    response_condiciones: 0
                },
                provider: "twilio"
            }
            it("sends message to adaptorex", async () => {
                expect.assertions(1);
                await actions.evaluateCorona(params);
                expect(mAddMessage).toHaveBeenCalledWith(params, "response1");
            });
        });
    })
});